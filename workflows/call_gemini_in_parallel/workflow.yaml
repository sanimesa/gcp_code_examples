# Example workflow that executes a parallel loop over a set of city names and 
# invokes the Gemini API on each. Finally it stores the responses into BigQuery 
main:
  params: [input]
  steps:
    - init:
        assign:
          - project_id: ${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}
          - dataset_id: "dev"
          - table_id: "workflow_test_table"          
          - api_key_id: "genai_api_key"  
          - mycity: "Denver, CO"
          - prompt: "What is the top attractions of this city? Only respond in a short sentence."
          - cities: ['Denver, CO', 'Charleston, SC', 'Sedona, AZ', 'Asheville, NC', 'San Antonio, TX', 'St. Louis, MO']
    - access_secret:
        call: googleapis.secretmanager.v1.projects.secrets.versions.accessString
        args:
          secret_id: ${api_key_id}
          project_id: ${project_id}
        result: str_secret        
    - retrieve_cities:
        parallel:
            for:
                value: city
                index: i
                in: ${cities}
                steps:
                - ask_gemini:
                    call: http.post
                    args:
                      url: 'https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent'
                      headers:
                        Content-Type: application/json
                      query: 
                        key: ${str_secret}
                      body: 
                        contents:
                          - parts:
                              - text: ${prompt + city}
                        generationConfig:
                          temperature: 0.9
                          topK: 1
                          topP: 1
                          maxOutputTokens: 2048
                          stopSequences: []
                    result: airesult
                - parse_llm_response:
                    assign:
                      - llm_response: ${text.replace_all(airesult["body"]["candidates"][0]["content"]["parts"][0]["text"], "'", " ")}
                      - query: ${"insert into dev.workflow_test_table (city, llm_response) values ('" + city + "', '" +  llm_response + "');"}
                - insert_data:
                    call: googleapis.bigquery.v2.jobs.query
                    args:
                      projectId: ${project_id}
                      body:
                        query: '${query}'
                        useLegacySql: false
    - returnOutput:
        return: "success!"
